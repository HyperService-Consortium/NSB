package main

import (
	"encoding/json"
	"fmt"
	ethclient "github.com/HyperService-Consortium/NSB/lib/eth-client"
	"github.com/Myriad-Dreamin/minimum-lib/sugar"
	"strconv"
	"testing"
)

func sendTransaction(host, address, password string, t *testing.T,
	to, content, value string) string {

	eth := ethclient.NewEthClient(host)

	ok := sugar.HandlerError(eth.PersonalUnlockAccout(address, password, 1000000)).(bool)
	if !ok {
		t.Fatal(ok)
	}
	body := sugar.HandlerError(json.Marshal(struct {
		From  string `json:"from,omitempty"`
		To    string `json:"to,omitempty"`
		Data  string `json:"data,omitempty"`
		Gas   string `json:"gas,omitempty"`
		Value string `json:"value,omitempty"`
	}{
		From: address,
		To:   to,
		Data: content,
		//formatAddress(*address) +
		//"0000000000000000000000000000000000000000000000000000000000000001",
		Gas: "0x" +
			strconv.FormatInt(8000000, 16),
		//Value: "0x10",
		Value: value,
	})).([]byte)

	fmt.Println(string(body))

	res := sugar.HandlerError(eth.SendTransaction(body)).(string)
	return res
}

func bindSendTransaction(host, address, password string, t *testing.T) func(
	to, content, value string) string {
	return func(to, content, value string) string {
		return sendTransaction(host, address, password, t, to, content, value)
	}
}

func TestDeployBroker(t *testing.T) {
	const (
		host     = "http://121.89.200.234:8545"
		address  = "0x4b3a59cd1183ab81b3c31b5a22bce26adf928ac2"
		password = "123456"
		content  = "0x60806040523480156200001157600080fd5b50604051620016ac380380620016ac833981018060405281019080805182019291906020018051906020019092919050505060008251826032821015156200005857600080fd5b8181111515156200006857600080fd5b600081141515156200007957600080fd5b600082141515156200008a57600080fd5b600092505b8451831015620001da57600160008685815181101515620000ac57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015620001515750600073ffffffffffffffffffffffffffffffffffffffff1685848151811015156200012e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b15156200015d57600080fd5b600180600087868151811015156200017157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082806001019350506200008f565b8460029080519060200190620001f292919062000205565b50836003819055505050505050620002da565b82805482825590600052602060002090810192821562000281579160200282015b82811115620002805782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000226565b5b50905062000290919062000294565b5090565b620002d791905b80821115620002d357600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016200029b565b5090565b90565b6113c280620002ea6000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025e7c27146100eb578063173825d9146101585780631ded14711461019b5780632f54bf6e146101c657806346aa4f4c146102215780634a74db801461029c5780634c305f42146102c7578063560f28ac1461030857806360e2bdbe1461033357806365710695146103ae57806367eb4a3c146103d95780637065cb48146104065780639356bce014610449578063d74f8edd146104ae578063e1568640146104d9578063ef18374a14610508575b600080fd5b3480156100f757600080fd5b5061011660048036038101908080359060200190929190505050610533565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016457600080fd5b50610199600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610571565b005b3480156101a757600080fd5b506101b06109b8565b6040518082815260200191505060405180910390f35b3480156101d257600080fd5b50610207600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109be565b604051808215151515815260200191505060405180910390f35b34801561022d57600080fd5b50610282600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109de565b604051808215151515815260200191505060405180910390f35b3480156102a857600080fd5b506102b1610a0d565b6040518082815260200191505060405180910390f35b3480156102d357600080fd5b506102f260048036038101908080359060200190929190505050610a12565b6040518082815260200191505060405180910390f35b34801561031457600080fd5b5061031d610a35565b6040518082815260200191505060405180910390f35b34801561033f57600080fd5b50610394600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a3b565b604051808215151515815260200191505060405180910390f35b3480156103ba57600080fd5b506103c3610a6a565b6040518082815260200191505060405180910390f35b3480156103e557600080fd5b5061040460048036038101908080359060200190929190505050610ba8565b005b34801561041257600080fd5b50610447600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c77565b005b34801561045557600080fd5b5061049460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc7565b604051808215151515815260200191505060405180910390f35b3480156104ba57600080fd5b506104c3610ff6565b6040518082815260200191505060405180910390f35b3480156104e557600080fd5b506104ee610ffb565b604051808215151515815260200191505060405180910390f35b34801561051457600080fd5b5061051d61104f565b6040518082815260200191505060405180910390f35b60028181548110151561054257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008033600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156105d057600080fd5b85600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561062957600080fd5b60016002805490500360035460328210151561064457600080fd5b81811115151561065357600080fd5b6000811415151561066357600080fd5b6000821415151561067357600080fd5b6001600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060009750600096505b6002805490508710156108065760028781548110151561072d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16955060011515600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156107f95787806001019850505b8680600101975050610711565b600354881015156109ad576000600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600094505b600280549050851015610993578873ffffffffffffffffffffffffffffffffffffffff166002868154811015156108a157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109865760026001600280549050038154811015156108ff57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028681548110151561093957fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610993565b848060010195505061086e565b60016002818180549050039150816109ab9190611345565b505b505050505050505050565b60005481565b60016020528060005260406000206000915054906101000a900460ff1681565b60066020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600581565b600581815481101515610a2157fe5b906000526020600020016000915090505481565b60035481565b60076020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806000806000806000806000965060009550600094505b600580549050851015610b925760009350600585815481101515610aa357fe5b90600052602060002001549250600091505b600280549050821015610b7557600282815481101515610ad157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506004600084815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b68576001840193505b8180600101925050610ab5565b8684101515610b85578396508295505b8480600101955050610a83565b8560008190555060005497505050505050505090565b33600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610c0157600080fd5b610c0a8261105c565b60016004600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080600033600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610cd557600080fd5b600160028054905001600354603282101515610cf057600080fd5b818111151515610cff57600080fd5b60008114151515610d0f57600080fd5b60008214151515610d1f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614151515610d5b57600080fd5b6001600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060009550600094505b600280549050851015610eec57600285815481101515610e1557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935060011515600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610edf576001860195505b8480600101955050610df9565b60035486101515610fbe5760028790806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060018060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610fbd87611193565b5b50505050505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b603281565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600280549050905090565b600080600091505b6005805490508210156110a4578260058381548110151561108157fe5b906000526020600020015414156110975761118e565b8180600101925050611064565b6005808054905010156110e257600583908060018154018082558091505090600182039060005260206000200160009091929091909150555061118e565b600560008154811015156110f257fe5b90600052602060002001549050600191505b6005805490508210156111585760058281548110151561112057fe5b906000526020600020015460056001840381548110151561113d57fe5b90600052602060002001819055508180600101925050611104565b61116181611282565b60058390806001815401808255809150509060018203906000526020600020016000909192909190915055505b505050565b600080600091505b60028054905082101561127d576002828154811015156111b757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055818060010192505061119b565b505050565b600080600091505b600280549050821015611340576002828154811015156112a657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506004600084815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055818060010192505061128a565b505050565b81548183558181111561136c5781836000526020600020918201910161136b9190611371565b5b505050565b61139391905b8082111561138f576000816000905550600101611377565b5090565b905600a165627a7a72305820dd1dc1360d7ba0ddc654d994163d93cc3aa8225fba070e22e48ce9e7af1a8d1c0029" +
			"0000000000000000000000000000000000000000000000000000000000000040" +
			"0000000000000000000000000000000000000000000000000000000000000001" +
			"0000000000000000000000000000000000000000000000000000000000000001" +
			"0000000000000000000000004b3a59cd1183ab81b3c31b5a22bce26adf928ac2"
	)

	var sender = bindSendTransaction(host, address, password, t)
	fmt.Println(sender("", content, "0x0"))

	//	"0x0a65d6662666c64a583b193fa08f42145f3547d6"
}

//

func TestSetGenuineValue(t *testing.T) {
	const (
		host            = "http://121.89.200.234:8545"
		address         = "0x4b3a59cd1183ab81b3c31b5a22bce26adf928ac2"
		contractAddress = "0xdc02812b55d7f358db22c2f16bec501dac0e2bdc"
		password        = "123456"
		content         = "0x67eb4a3c" +
			"0000000000000000000000000000000000000000000000000000000000000001"
	)
	var sender = bindSendTransaction(host, address, password, t)
	fmt.Println(sender(contractAddress, content, ""))
}

func TestGetGenuineValue(t *testing.T) {
	const (
		host            = "http://121.89.200.234:8545"
		address         = "0x4b3a59cd1183ab81b3c31b5a22bce26adf928ac2"
		contractAddress = "0xdc02812b55d7f358db22c2f16bec501dac0e2bdc"
		password        = "123456"
		content         = "0x65710695"
	)
	var sender = bindSendTransaction(host, address, password, t)
	fmt.Println(sender(contractAddress, content, ""))
}

func TestDeployOption(t *testing.T) {
	const (
		host     = "http://121.89.200.234:8545"
		address  = "0x4b3a59cd1183ab81b3c31b5a22bce26adf928ac2"
		password = "123456"
		content  = "0x608060405260646000556040516108343803806108348339818101604052604081101561002b57600080fd5b81019080805190602001909291908051906020019092919050505034600a81101561005557600080fd5b3460008190555081600181905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156100de5733600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610120565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505050610702806101326000396000f3fe6080604052600436106100a3576000357c010000000000000000000000000000000000000000000000000000000090048063946cb4d411610076578063946cb4d414610146578063c40d29c9146101ba578063c52987cf146101e5578063cb1c2b5c14610210578063fba225b91461023b576100a3565b80633994a268146100a85780636db62d65146100d357806376004082146101015780637c1f751f1461010b575b600080fd5b3480156100b457600080fd5b506100bd610269565b6040518082815260200191505060405180910390f35b6100ff600480360360208110156100e957600080fd5b810190808035906020019092919050505061026f565b005b6101096103ed565b005b34801561011757600080fd5b506101446004803603602081101561012e57600080fd5b810190808035906020019092919050505061045b565b005b34801561015257600080fd5b506101956004803603602081101561016957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104bf565b6040518083151515158152602001821515151581526020019250505060405180910390f35b3480156101c657600080fd5b506101cf6104fd565b6040518082815260200191505060405180910390f35b3480156101f157600080fd5b506101fa610502565b6040518082815260200191505060405180910390f35b34801561021c57600080fd5b50610225610508565b6040518082815260200191505060405180910390f35b6102676004803603602081101561025157600080fd5b810190808035906020019092919050505061050d565b005b60005481565b6001600054101561027f57600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1680156103285750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16155b61033157600080fd5b6001548111156103ea57600061034982600154610620565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561038c57600080fd5b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550505b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044757600080fd5b61045360005434610637565b600081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b557600080fd5b8060018190555050565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b600a81565b60015481565b600181565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561056857600080fd5b600061057382610653565b90508034101561057f57fe5b604051806040016040528060011515815260200160001515815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055509050505050565b60008282111561062c57fe5b818303905092915050565b60008082840190508381101561064957fe5b8091505092915050565b600080600590506001548310610680576106788161067385600154610620565b61069e565b915050610699565b6106958161069060015486610620565b61069e565b9150505b919050565b600080828402905060008414806106bd5750828482816106ba57fe5b04145b6106c357fe5b809150509291505056fea265627a7a723158209fa43510c90db3cc4ceb5b4c0e89f98a772269bb21b785a1b69eb3a4eae31ab064736f6c63430005110032" +
			"00000000000000000000000067f384cc492a5b50470257077c071277b189522e" +
			"0000000000000000000000000000000000000000000000000000000000000001"
	)

	var sender = bindSendTransaction(host, address, password, t)
	fmt.Println(sender("", content, "0x10"))

	//	"0x020f39913d52128e585eaebecf816ce21412bb4a"
}

func TestCallBuyOption(t *testing.T) {
	const (
		host            = "http://121.89.200.234:8545"
		address         = "0x4b3a59cd1183ab81b3c31b5a22bce26adf928ac2"
		contractAddress = "0x020f39913d52128e585eaebecf816ce21412bb4a"
		password        = "123456"
		content         = "0xfba225b9" +
			"0000000000000000000000000000000000000000000000000000000000000001"
	)

	var sender = bindSendTransaction(host, address, password, t)
	fmt.Println(sender(contractAddress, content, ""))
}

func TestCallCashSettle(t *testing.T) {
	const (
		host            = "http://121.89.200.234:8545"
		address         = "0x4b3a59cd1183ab81b3c31b5a22bce26adf928ac2"
		contractAddress = "0x020f39913d52128e585eaebecf816ce21412bb4a"
		password        = "123456"
		content         = "0x6db62d65" +
			"0000000000000000000000000000000000000000000000000000000000000001"
	)

	var sender = bindSendTransaction(host, address, password, t)
	fmt.Println(sender(contractAddress, content, ""))
}

//
